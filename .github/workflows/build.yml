name: NodeJS with Webpack

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        #registry-url: 'https://pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/registry/'

    - uses: ponicode/azure-devops-npm-action@master
      with:
        organisation: "pokerkz"
        registry: "Shared"
        user: "pokerkz"
        password: ${{ secrets.NPM_TOKEN }}
        email: "kant2002@gmail.com"
        scope: "poker"
      
    - name: Safe install dependencies
      run: |
        printf "@poker:registry=https://pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/registry/\n" >> $GITHUB_WORKSPACE/.npmrc
        printf "always-auth=true\n" >> $GITHUB_WORKSPACE/.npmrc
        printf "//pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/registry/:username=pokerkz\n" >> $GITHUB_WORKSPACE/.npmrc
        printf "//pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/registry/:email=kant2002@gmail.com >> $GITHUB_WORKSPACE/.npmrc
        printf "//pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/registry/:_password=${{ secrets.NPM_TOKEN }}\n" >> $GITHUB_WORKSPACE/.npmrc
        printf "//pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/:username=pokerkz\n" >> $GITHUB_WORKSPACE/.npmrc
        printf "//pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/:_password=${{ secrets.NPM_TOKEN }}\n" >> $GITHUB_WORKSPACE/.npmrc
        printf "//pokerkz.pkgs.visualstudio.com/_packaging/Shared/npm/:email=kant2002@gmail.com >> $GITHUB_WORKSPACE/.npmrc
        npm ci --ignore-scripts
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Full install dependencies
      run: npm rebuild && npm run prepare --if-present

    - name: Build
      run: |
        npm run test -- --runInBand
        npm run lint:test
        npm run compile:test -- --noEmit

    - name: Report coverage
      run: |
        npm run report-coverage
